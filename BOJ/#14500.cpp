#include<iostream>
#include<vector>
using namespace std;
int board[500][500];
int n, m;
// 모든 테트로미노 경우를 좌표로 표현
int blocks[19][4][2] = {
	{{0,0},{0,1},{0,2},{0,3}},
	{{0,0},{1,0},{2,0},{3,0}},
	{{0,0},{1,0},{0,1},{1,1}},
	{{0,0},{0,1},{0,2},{1,2}},
	{{0,0},{1,0},{2,0},{0,1}},
	{{0,0},{1,0},{1,1},{1,2}},
	{{0,0},{0,1},{-1,1},{-2,1}},
	{{0,0},{0,1},{1,1},{1,2}},
	{{0,0},{1,0},{0,1},{-1,1}},
	{{0,0},{0,1},{0,2},{-1,2}},
	{{0,0},{1,0},{2,0},{2,1}},
	{{0,0},{1,0},{0,1},{0,2}},
	{{0,0},{0,1},{1,1},{2,1}},
	{{0,0},{0,1},{-1,1},{-1,2}},
	{{0,0},{1,0},{1,1},{2,1}},
	{{0,0},{1,0},{2,0},{1,1}},
	{{0,0},{0,1},{-1,1},{0,2}},
	{{0,0},{-1,1},{0,1},{1,1}},
	{{0,0},{0,1},{1,1},{0,2}}
};
int tetromino() {
	int ret = 0;
	// 전체 종이를 한칸씩 훑어가면서
	for(int i=0; i<n; i++)
		for (int j = 0; j < m; j++) {
			int curMax = 0;
			// 모든 테트로미노(19개)를 놓아본다
			for (int k = 0; k < 19; k++) {
				int cur = 0;
				for (int l = 0; l < 4; l++) {
					int dx = blocks[k][l][0];
					int dy = blocks[k][l][1];
					int x = j + dx;
					int y = i + dy;
					// 종이에 해당 테트로미노를 놓을 수 없는 경우 합을 0으로 표현
					if (0 > x || x >= m || 0 > y || y >= n) {
						cur = 0;
						break;
					}
					// 각 칸들의 수를 더한다
					cur += board[y][x];
				}
				// 현재 지점에서 놓을 수 있는 테트로미노중 가장 큰 합이 나오는 경우를 저장
				curMax = max(curMax, cur);
			}
			// 모든 지점에서 놓을 수 있는 테트로미노중 가장 큰 합이 나오는 경우르 저장
			ret = max(ret, curMax);
		}
	return ret;
}
int main() {
		cin >> n >> m;
		for (int i = 0; i < n; i++)
			for (int j = 0; j < m; j++)
				cin >> board[i][j];
		cout << tetromino() << endl;
}
